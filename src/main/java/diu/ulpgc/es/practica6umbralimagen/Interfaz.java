/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package diu.ulpgc.es.practica6umbralimagen;

import java.awt.image.BufferedImage;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;
import org.opencv.core.CvType;
import org.opencv.core.Mat;
import org.opencv.highgui.HighGui;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;

/**
 *
 * @author Jorge Santana
 */
public class Interfaz extends javax.swing.JFrame {
    
    private Mat imgOr, imgMod;
    private JFileChooser fc = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter("Imágenes (*.jpg, *.png)", "jpg", "png");
    File file;
    BufferedImage imagen;

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        nu.pattern.OpenCV.loadShared();
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        fc.addChoosableFileFilter(filter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lienzo1 = new diu.ulpgc.es.practica6umbralimagen.Lienzo();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        archivoMenu = new javax.swing.JMenu();
        abrirMenuItem = new javax.swing.JMenuItem();
        guardarMenuItem = new javax.swing.JMenuItem();
        umbralizarMenuItem = new javax.swing.JMenuItem();
        cerrarMenuItem = new javax.swing.JMenuItem();
        ayudaMenu = new javax.swing.JMenu();
        acercaDeMenu = new javax.swing.JMenu();
        descripcionItem = new javax.swing.JMenuItem();
        abrirDescItem = new javax.swing.JMenuItem();
        guardarDescItem = new javax.swing.JMenuItem();
        umbralizarDescItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Imagen"));

        javax.swing.GroupLayout lienzo1Layout = new javax.swing.GroupLayout(lienzo1);
        lienzo1.setLayout(lienzo1Layout);
        lienzo1Layout.setHorizontalGroup(
            lienzo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 721, Short.MAX_VALUE)
        );
        lienzo1Layout.setVerticalGroup(
            lienzo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 668, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lienzo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lienzo1, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        jLabel1.setText("Jorge Santana Lorenzo");

        jLabel2.setText("Francisco Javier Sánchez González");

        archivoMenu.setText("Archivo");

        abrirMenuItem.setText("Abrir");
        abrirMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirMenuItemActionPerformed(evt);
            }
        });
        archivoMenu.add(abrirMenuItem);

        guardarMenuItem.setText("Guardar");
        guardarMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarMenuItemActionPerformed(evt);
            }
        });
        archivoMenu.add(guardarMenuItem);

        umbralizarMenuItem.setText("Umbralizar");
        umbralizarMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                umbralizarMenuItemActionPerformed(evt);
            }
        });
        archivoMenu.add(umbralizarMenuItem);

        cerrarMenuItem.setText("Cerrar aplicación");
        cerrarMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarMenuItemActionPerformed(evt);
            }
        });
        archivoMenu.add(cerrarMenuItem);

        menuBar.add(archivoMenu);

        ayudaMenu.setText("Ayuda");

        acercaDeMenu.setText("Acerca de");

        descripcionItem.setText("Descripción General");
        descripcionItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descripcionItemActionPerformed(evt);
            }
        });
        acercaDeMenu.add(descripcionItem);

        abrirDescItem.setText("Abrir");
        abrirDescItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirDescItemActionPerformed(evt);
            }
        });
        acercaDeMenu.add(abrirDescItem);

        guardarDescItem.setText("Guardar");
        guardarDescItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarDescItemActionPerformed(evt);
            }
        });
        acercaDeMenu.add(guardarDescItem);

        umbralizarDescItem.setText("Umbralizar");
        umbralizarDescItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                umbralizarDescItemActionPerformed(evt);
            }
        });
        acercaDeMenu.add(umbralizarDescItem);

        ayudaMenu.add(acercaDeMenu);

        menuBar.add(ayudaMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap(888, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void abrirMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirMenuItemActionPerformed
        int op = fc.showOpenDialog(this);
        if(op == JFileChooser.APPROVE_OPTION) {
            file = fc.getSelectedFile();
            imgOr = Imgcodecs.imread(file.getPath());
            imagen = (BufferedImage) HighGui.toBufferedImage(imgOr);
            if(imagen.getHeight() <= 768 && imagen.getWidth() <= 1024) {
                lienzo1.setImage(imagen);
                umbralizarMenuItem.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(this, "El tamaño debe ser como máximo 1024x768", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_abrirMenuItemActionPerformed

    private void umbralizarMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_umbralizarMenuItemActionPerformed
        String res = JOptionPane.showInputDialog(this, "Introduce el valor de umbralizado","Umbralizar", JOptionPane.QUESTION_MESSAGE);
        int valor = Integer.parseInt(res);
        imgMod = umbralizar(imgOr, valor);
        lienzo1.setImage((BufferedImage) HighGui.toBufferedImage(imgMod));
        guardarMenuItem.setEnabled(true);
    }//GEN-LAST:event_umbralizarMenuItemActionPerformed

    private void guardarMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarMenuItemActionPerformed
        int op = fc.showSaveDialog(this);
        if(op == JFileChooser.APPROVE_OPTION) {
            file = fc.getSelectedFile();
            Imgcodecs.imwrite(file.getPath(), imgMod);
        }
    }//GEN-LAST:event_guardarMenuItemActionPerformed

    private void cerrarMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarMenuItemActionPerformed
       int res = JOptionPane.showConfirmDialog(this, "¿Desea cerrar la aplicación?", "Cerrar aplicación", JOptionPane.YES_NO_CANCEL_OPTION);
       if(res == JOptionPane.YES_OPTION) {
           dispose();
       }
    }//GEN-LAST:event_cerrarMenuItemActionPerformed

    private void descripcionItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descripcionItemActionPerformed
        String desc = "Esta aplicación sirve para umbralizar una imagen que el usuario seleccione de entre las que tiene guardada en su ordenador";
        JOptionPane.showMessageDialog(this, desc, "Acerca de la aplicación", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_descripcionItemActionPerformed

    private void abrirDescItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirDescItemActionPerformed
        String desc = "Esta opción permite al usuario elegir una imagen de su equipo, en formato .jpg o .png(con un formato máximo de 1024x768)";
        JOptionPane.showMessageDialog(this, desc, "Acerca de Abrir", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_abrirDescItemActionPerformed

    private void guardarDescItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarDescItemActionPerformed
        String desc = "Esta opción permite guardar la imagen umbralizada ya sea en formato .jpg o .png en su equipo";
        JOptionPane.showMessageDialog(this, desc, "Acerca de Guardar", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_guardarDescItemActionPerformed

    private void umbralizarDescItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_umbralizarDescItemActionPerformed
        String desc = "Esta opción permite al usuario umbralizar la imagen que ha seleccionado. Para ello se le pedirá el valor de umbralizado que desee para el filtro";
        JOptionPane.showMessageDialog(this, desc, "Acerca de Umbralizar", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_umbralizarDescItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }
    
    
    
    private Mat umbralizar(Mat imagen_original, Integer umbral) {
        // crear dos imágenes en niveles de gris con el mismo
        // tamaño que la original
        Mat imagenGris = new Mat(imagen_original.rows(),
                                imagen_original.cols(),
                                CvType.CV_8U);
        Mat imagenUmbralizada = new Mat(imagen_original.rows(),
                                        imagen_original.cols(),
                                        CvType.CV_8U);
        // convierte a niveles de grises la imagen original
        Imgproc.cvtColor(imagen_original,
                        imagenGris,
                        Imgproc.COLOR_BGR2GRAY);
        // umbraliza la imagen:
        // - píxeles con nivel de gris > umbral se ponen a 1
        // - píxeles con nivel de gris <= umbra se ponen a 0
        Imgproc.threshold(imagenGris,
                        imagenUmbralizada,
                        umbral,
                        255,
                        Imgproc.THRESH_BINARY);
        // se devuelve la imagen umbralizada
        return imagenUmbralizada;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrirDescItem;
    private javax.swing.JMenuItem abrirMenuItem;
    private javax.swing.JMenu acercaDeMenu;
    private javax.swing.JMenu archivoMenu;
    private javax.swing.JMenu ayudaMenu;
    private javax.swing.JMenuItem cerrarMenuItem;
    private javax.swing.JMenuItem descripcionItem;
    private javax.swing.JMenuItem guardarDescItem;
    private javax.swing.JMenuItem guardarMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private diu.ulpgc.es.practica6umbralimagen.Lienzo lienzo1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem umbralizarDescItem;
    private javax.swing.JMenuItem umbralizarMenuItem;
    // End of variables declaration//GEN-END:variables
}
